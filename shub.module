<?php

/*
 * Sensor Board Load By ID: Load a Sensor Board node using the Sensor Board's ID
 */
function shub_sensor_board_load_by_id($sensor_board_id) {
  // Retrieve the corresponding sensor_board node by matching $sensor_board_id
  // to field_sensor_board_id
  $q = " 
    SELECT node.nid AS nid
    FROM node node
    LEFT JOIN content_type_sensor_board
      ON node.vid = content_type_sensor_board.vid
    WHERE (content_type_sensor_board.field_sb_id_value) = ('%s')
  ";
  $result = db_query($q, $sensor_board_id);
  $sensor_board_nid = db_result($result);
  // If there isn't a matching sensor board, notify the user
  if($sensor_board_nid != 0) {
    return node_load($sensor_board_nid);
  }
  else {
    drupal_set_message("Could not find Sensor Board with ID {$sensor_board_id}");
  }
}

/*
 * Return all sensors attached to a Sensor Board node
 */
function shub_sensor_board_get_sensors($nid = NULL, $id = NULL) {

  if($id) {
    // Load the sensor board node, which will trigger this function with $nid
    // parameter, and then return the sensors.
    $sensor_board = shub_sensor_load_by_id($id);
    return $sensor_board->sensors;
  }

  // Retrieve the corresponding sensor nid's matching $sensor_board_nid to
  // node_node_data_field_sensor_to_sb.nid
  // Also, grab the sensor's string position in the sensor board data string.
  // The query is a bit of a monster right now, copied from Views :P
  $q = "
    SELECT node.title AS node_title, node.nid AS nid, node_data_field_sensor_to_sb.field_sensor_to_sb_nid AS node_data_field_sensor_to_sb_field_sensor_to_sb_nid, node.type AS node_type, node.vid AS node_vid FROM node node  LEFT JOIN content_type_sensor node_data_field_sensor_to_sb ON node.vid = node_data_field_sensor_to_sb.vid INNER JOIN node node_node_data_field_sensor_to_sb ON node_data_field_sensor_to_sb.field_sensor_to_sb_nid = node_node_data_field_sensor_to_sb.nid WHERE (node.type in ('sensor')) AND (node_node_data_field_sensor_to_sb.nid = %s)";
  $result = db_query($q, $nid);
  while($sensor = db_fetch_array($result) ) {
    $sensor = node_load($sensor['nid']);
    $sensors[$sensor->id] = $sensor;
  }
  return $sensors;
}

/****************************************************************
 * Sensor functions
 *
 * hook_load
 */

/*
 *
 * @todo Fix the caching here
 */
function shub_sensor_board_sensors_load($sensor_board_nid, $reset = FALSE) {
 
  // static $cache;
  $sensors = array();
 
  // Only fetch the sensors nids if they are not already in cache or told to reset
  // if (!$cache[$sensor_board_nid] || $reset) {
    $result = db_query("SELECT node.nid AS nid 
            FROM node node  
            INNER JOIN og_ancestry og_ancestry 
            ON node.nid = og_ancestry.nid 
            WHERE (node.type in ('shub_sensor')) 
            AND (og_ancestry.group_nid = %d)",
            array( $sensor_board_nid ) );
    while ($sensor_nid = db_result($result)) {
      $sensor = node_load($sensor_nid);
      $sensors[$sensor->field_sensor_id[0]['value']] = $sensor;
    }
  // }
  // If we have an array of sensor nids, load their nodes and return them.
  /*
   if (is_array($cache[$sensor_board_nid])) {
   
    foreach ($cache[$sensor_board_nid] as $key => $sensor_nid) {
      $sensor = node_load($sensor_nid);
      $sensors[$sensor->field_sensor_id[0]['value']] = $sensor;
    }
    return $sensors;
  } 
   * 
   */
  return $sensors;
  
}

function shub_sensor_board_attach_sensor($sensor_board_nid, $sensor_id) {
  $sensor_board = node_load($sensor_board_nid);
  $sensor = new stdClass();
  $sensor->type = 'shub_sensor';
  $sensor->og_groups = array( $sensor_board_nid => $sensor_board_nid);
  $sensor->uid = $sensor_board->uid;
  // give the Sensor Reading a title
  $sensor->title = $sensor_id;
  $sensor->field_sensor_id = array( array('value'=>$sensor_id) );
  // save the new Sensor Reading
  node_save($sensor); 

}

/*
 * Sensor Load By ID: Load a Sensor Board node using the Sensor's ID
 */
function shub_sensor_load_by_id($sensor_id) {
  // Retrieve the corresponding sensor node by matching $sensor_id
  // to field_sensor_board_id
  $q = " 
    SELECT node.nid AS nid
    FROM node node
    LEFT JOIN content_type_sensor
      ON node.vid = content_type_sensor.vid
    WHERE (content_type_sensor.field_sensor_id_value) = ('%s')
  ";
  $result = db_query($q, $sensor_id);
  $sensor_nid = db_result($result);
  // If there isn't a matching sensor, notify the user
  if($sensor_nid != 0) {
    return node_load($sensor_nid);
  }
  else {
    drupal_set_message("Could not find Sensor with ID {$sensor_id}");
  }
}
